{
  "version": 3,
  "sources": ["../../three-transform-controls/index.js"],
  "sourcesContent": ["/**\n * @author arodic / https://github.com/arodic\n */\nmodule.exports = function (THREE) {\n\n\tvar GizmoMaterial = function (parameters) {\n\n\t\tTHREE.MeshBasicMaterial.call(this);\n\n\t\tthis.depthTest = false;\n\t\tthis.depthWrite = false;\n\t\tthis.side = THREE.FrontSide;\n\t\tthis.transparent = true;\n\n\t\tthis.setValues(parameters);\n\n\t\tthis.oldColor = this.color.clone();\n\t\tthis.oldOpacity = this.opacity;\n\n\t\tthis.highlight = function (highlighted) {\n\n\t\t\tif (highlighted) {\n\n\t\t\t\tthis.color.setRGB(1, 1, 0);\n\t\t\t\tthis.opacity = 1;\n\n\t\t\t} else {\n\t\t\t\tthis.color.copy(this.oldColor);\n\t\t\t\tthis.opacity = this.oldOpacity;\n\t\t\t}\n\n\t\t};\n\n\t};\n\n\tGizmoMaterial.prototype = Object.create(THREE.MeshBasicMaterial.prototype);\n\tGizmoMaterial.prototype.constructor = GizmoMaterial;\n\n\tvar GizmoLineMaterial = function (parameters) {\n\n\t\tTHREE.LineBasicMaterial.call(this);\n\t\t\n\t\tthis.depthTest = false;\n\t\tthis.depthWrite = false;\n\t\tthis.transparent = true;\n\t\tthis.linewidth = 1;\n\n\t\tthis.setValues(parameters);\n\n\t\tthis.oldColor = this.color.clone();\n\t\tthis.oldOpacity = this.opacity;\n\n\t\tthis.highlight = function (highlighted) {\n\n\t\t\tif (highlighted) {\n\n\t\t\t\tthis.color.setRGB(1, 1, 0);\n\t\t\t\tthis.opacity = 1;\n\n\t\t\t} else {\n\n\t\t\t\tthis.color.copy(this.oldColor);\n\t\t\t\tthis.opacity = this.oldOpacity;\n\n\t\t\t}\n\n\t\t};\n\n\t};\n\n\tGizmoLineMaterial.prototype = Object.create(THREE.LineBasicMaterial.prototype);\n\tGizmoLineMaterial.prototype.constructor = GizmoLineMaterial;\n\n\n\tvar pickerMaterial = new GizmoMaterial({ visible: false, transparent: false });\n\n\n\tTHREE.TransformGizmo = function () {\n\n\t\tvar scope = this;\n\n\t\tthis.init = function () {\n\n\t\t\tTHREE.Object3D.call(this);\n\n\t\t\tthis.handles = new THREE.Object3D();\n\t\t\tthis.pickers = new THREE.Object3D();\n\t\t\tthis.planes = new THREE.Object3D();\n\n\t\t\tthis.add(this.handles);\n\t\t\tthis.add(this.pickers);\n\t\t\tthis.add(this.planes);\n\n\t\t\t//// PLANES\n\n\t\t\tvar planeGeometry = new THREE.PlaneBufferGeometry(50, 50, 2, 2);\n\t\t\tvar planeMaterial = new THREE.MeshBasicMaterial({ visible: false, side: THREE.DoubleSide });\n\n\t\t\tvar planes = {\n\t\t\t\t\"XY\": new THREE.Mesh(planeGeometry, planeMaterial),\n\t\t\t\t\"YZ\": new THREE.Mesh(planeGeometry, planeMaterial),\n\t\t\t\t\"XZ\": new THREE.Mesh(planeGeometry, planeMaterial),\n\t\t\t\t\"XYZE\": new THREE.Mesh(planeGeometry, planeMaterial)\n\t\t\t};\n\n\t\t\tthis.activePlane = planes[\"XYZE\"];\n\n\t\t\tplanes[\"YZ\"].rotation.set(0, Math.PI / 2, 0);\n\t\t\tplanes[\"XZ\"].rotation.set(- Math.PI / 2, 0, 0);\n\n\t\t\tfor (var i in planes) {\n\n\t\t\t\tplanes[i].name = i;\n\t\t\t\tthis.planes.add(planes[i]);\n\t\t\t\tthis.planes[i] = planes[i];\n\n\t\t\t}\n\n\t\t\t//// HANDLES AND PICKERS\n\n\t\t\tvar setupGizmos = function (gizmoMap, parent) {\n\n\t\t\t\tfor (var name in gizmoMap) {\n\n\t\t\t\t\tfor (i = gizmoMap[name].length; i--;) {\n\n\t\t\t\t\t\tvar object = gizmoMap[name][i][0];\n\t\t\t\t\t\tvar position = gizmoMap[name][i][1];\n\t\t\t\t\t\tvar rotation = gizmoMap[name][i][2];\n\n\t\t\t\t\t\tobject.name = name;\n\n\t\t\t\t\t\tif (position) object.position.set(position[0], position[1], position[2]);\n\t\t\t\t\t\tif (rotation) object.rotation.set(rotation[0], rotation[1], rotation[2]);\n\n\t\t\t\t\t\tparent.add(object);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tsetupGizmos(this.handleGizmos, this.handles);\n\t\t\tsetupGizmos(this.pickerGizmos, this.pickers);\n\n\t\t\t// reset Transformations\n\n\t\t\tthis.traverse(function (child) {\n\n\t\t\t\tif (child instanceof THREE.Mesh) {\n\n\t\t\t\t\tchild.updateMatrix();\n\n\t\t\t\t\tvar tempGeometry = child.geometry.clone();\n\t\t\t\t\ttempGeometry.applyMatrix(child.matrix);\n\t\t\t\t\tchild.geometry = tempGeometry;\n\n\t\t\t\t\tchild.position.set(0, 0, 0);\n\t\t\t\t\tchild.rotation.set(0, 0, 0);\n\t\t\t\t\tchild.scale.set(1, 1, 1);\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t};\n\n\t\tthis.highlight = function (axis) {\n\n\t\t\tthis.traverse(function (child) {\n\n\t\t\t\tif (child.material && child.material.highlight) {\n\n\t\t\t\t\tif (child.name === axis) {\n\n\t\t\t\t\t\tchild.material.highlight(true);\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tchild.material.highlight(false);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t};\n\n\t};\n\n\tTHREE.TransformGizmo.prototype = Object.create(THREE.Object3D.prototype);\n\tTHREE.TransformGizmo.prototype.constructor = THREE.TransformGizmo;\n\n\tTHREE.TransformGizmo.prototype.update = function (rotation, eye) {\n\n\t\tvar vec1 = new THREE.Vector3(0, 0, 0);\n\t\tvar vec2 = new THREE.Vector3(0, 1, 0);\n\t\tvar lookAtMatrix = new THREE.Matrix4();\n\n\t\tthis.traverse(function (child) {\n\n\t\t\tif (child.name.search(\"E\") !== - 1) {\n\n\t\t\t\tchild.quaternion.setFromRotationMatrix(lookAtMatrix.lookAt(eye, vec1, vec2));\n\n\t\t\t} else if (child.name.search(\"X\") !== - 1 || child.name.search(\"Y\") !== - 1 || child.name.search(\"Z\") !== - 1) {\n\n\t\t\t\tchild.quaternion.setFromEuler(rotation);\n\n\t\t\t}\n\n\t\t});\n\n\t};\n\n\tTHREE.TransformGizmoTranslate = function () {\n\n\t\tTHREE.TransformGizmo.call(this);\n\n\t\tvar arrowGeometry = new THREE.Geometry();\n\t\tvar mesh = new THREE.Mesh(new THREE.CylinderGeometry(0, 0.05, 0.2, 12, 1, false));\n\t\tmesh.position.y = 0.5;\n\t\tmesh.updateMatrix();\n\n\t\tarrowGeometry.merge(mesh.geometry, mesh.matrix);\n\n\t\tvar lineXGeometry = new THREE.BufferGeometry();\n\t\tlineXGeometry.addAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n\n\t\tvar lineYGeometry = new THREE.BufferGeometry();\n\t\tlineYGeometry.addAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n\n\t\tvar lineZGeometry = new THREE.BufferGeometry();\n\t\tlineZGeometry.addAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n\n\t\tthis.handleGizmos = {\n\n\t\t\tX: [\n\t\t\t\t[new THREE.Mesh(arrowGeometry, new GizmoMaterial({ color: 0xff0000 })), [0.5, 0, 0], [0, 0, - Math.PI / 2]],\n\t\t\t\t[new THREE.Line(lineXGeometry, new GizmoLineMaterial({ color: 0xff0000 }))]\n\t\t\t],\n\n\t\t\tY: [\n\t\t\t\t[new THREE.Mesh(arrowGeometry, new GizmoMaterial({ color: 0x00ff00 })), [0, 0.5, 0]],\n\t\t\t\t[new THREE.Line(lineYGeometry, new GizmoLineMaterial({ color: 0x00ff00 }))]\n\t\t\t],\n\n\t\t\tZ: [\n\t\t\t\t[new THREE.Mesh(arrowGeometry, new GizmoMaterial({ color: 0x0000ff })), [0, 0, 0.5], [Math.PI / 2, 0, 0]],\n\t\t\t\t[new THREE.Line(lineZGeometry, new GizmoLineMaterial({ color: 0x0000ff }))]\n\t\t\t],\n\n\t\t\tXYZ: [\n\t\t\t\t[new THREE.Mesh(new THREE.OctahedronGeometry(0.1, 0), new GizmoMaterial({ color: 0xffffff, opacity: 0.25 })), [0, 0, 0], [0, 0, 0]]\n\t\t\t],\n\n\t\t\tXY: [\n\t\t\t\t[new THREE.Mesh(new THREE.PlaneBufferGeometry(0.29, 0.29), new GizmoMaterial({ color: 0xffff00, opacity: 0.25 })), [0.15, 0.15, 0]]\n\t\t\t],\n\n\t\t\tYZ: [\n\t\t\t\t[new THREE.Mesh(new THREE.PlaneBufferGeometry(0.29, 0.29), new GizmoMaterial({ color: 0x00ffff, opacity: 0.25 })), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]\n\t\t\t],\n\n\t\t\tXZ: [\n\t\t\t\t[new THREE.Mesh(new THREE.PlaneBufferGeometry(0.29, 0.29), new GizmoMaterial({ color: 0xff00ff, opacity: 0.25 })), [0.15, 0, 0.15], [- Math.PI / 2, 0, 0]]\n\t\t\t]\n\n\t\t};\n\n\t\tthis.pickerGizmos = {\n\n\t\t\tX: [\n\t\t\t\t[new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), pickerMaterial), [0.6, 0, 0], [0, 0, - Math.PI / 2]]\n\t\t\t],\n\n\t\t\tY: [\n\t\t\t\t[new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), pickerMaterial), [0, 0.6, 0]]\n\t\t\t],\n\n\t\t\tZ: [\n\t\t\t\t[new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), pickerMaterial), [0, 0, 0.6], [Math.PI / 2, 0, 0]]\n\t\t\t],\n\n\t\t\tXYZ: [\n\t\t\t\t[new THREE.Mesh(new THREE.OctahedronGeometry(0.2, 0), pickerMaterial)]\n\t\t\t],\n\n\t\t\tXY: [\n\t\t\t\t[new THREE.Mesh(new THREE.PlaneBufferGeometry(0.4, 0.4), pickerMaterial), [0.2, 0.2, 0]]\n\t\t\t],\n\n\t\t\tYZ: [\n\t\t\t\t[new THREE.Mesh(new THREE.PlaneBufferGeometry(0.4, 0.4), pickerMaterial), [0, 0.2, 0.2], [0, Math.PI / 2, 0]]\n\t\t\t],\n\n\t\t\tXZ: [\n\t\t\t\t[new THREE.Mesh(new THREE.PlaneBufferGeometry(0.4, 0.4), pickerMaterial), [0.2, 0, 0.2], [- Math.PI / 2, 0, 0]]\n\t\t\t]\n\n\t\t};\n\n\t\tthis.setActivePlane = function (axis, eye) {\n\n\t\t\tvar tempMatrix = new THREE.Matrix4();\n\t\t\teye.applyMatrix4(tempMatrix.getInverse(tempMatrix.extractRotation(this.planes[\"XY\"].matrixWorld)));\n\n\t\t\tif (axis === \"X\") {\n\n\t\t\t\tthis.activePlane = this.planes[\"XY\"];\n\n\t\t\t\tif (Math.abs(eye.y) > Math.abs(eye.z)) this.activePlane = this.planes[\"XZ\"];\n\n\t\t\t}\n\n\t\t\tif (axis === \"Y\") {\n\n\t\t\t\tthis.activePlane = this.planes[\"XY\"];\n\n\t\t\t\tif (Math.abs(eye.x) > Math.abs(eye.z)) this.activePlane = this.planes[\"YZ\"];\n\n\t\t\t}\n\n\t\t\tif (axis === \"Z\") {\n\n\t\t\t\tthis.activePlane = this.planes[\"XZ\"];\n\n\t\t\t\tif (Math.abs(eye.x) > Math.abs(eye.y)) this.activePlane = this.planes[\"YZ\"];\n\n\t\t\t}\n\n\t\t\tif (axis === \"XYZ\") this.activePlane = this.planes[\"XYZE\"];\n\n\t\t\tif (axis === \"XY\") this.activePlane = this.planes[\"XY\"];\n\n\t\t\tif (axis === \"YZ\") this.activePlane = this.planes[\"YZ\"];\n\n\t\t\tif (axis === \"XZ\") this.activePlane = this.planes[\"XZ\"];\n\n\t\t};\n\n\t\tthis.init();\n\n\t};\n\n\tTHREE.TransformGizmoTranslate.prototype = Object.create(THREE.TransformGizmo.prototype);\n\tTHREE.TransformGizmoTranslate.prototype.constructor = THREE.TransformGizmoTranslate;\n\n\tTHREE.TransformGizmoRotate = function () {\n\n\t\tTHREE.TransformGizmo.call(this);\n\n\t\tvar CircleGeometry = function (radius, facing, arc) {\n\n\t\t\tvar geometry = new THREE.BufferGeometry();\n\t\t\tvar vertices = [];\n\t\t\tarc = arc ? arc : 1;\n\n\t\t\tfor (var i = 0; i <= 64 * arc; ++i) {\n\n\t\t\t\tif (facing === 'x') vertices.push(0, Math.cos(i / 32 * Math.PI) * radius, Math.sin(i / 32 * Math.PI) * radius);\n\t\t\t\tif (facing === 'y') vertices.push(Math.cos(i / 32 * Math.PI) * radius, 0, Math.sin(i / 32 * Math.PI) * radius);\n\t\t\t\tif (facing === 'z') vertices.push(Math.sin(i / 32 * Math.PI) * radius, Math.cos(i / 32 * Math.PI) * radius, 0);\n\n\t\t\t}\n\n\t\t\tgeometry.addAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n\t\t\treturn geometry;\n\n\t\t};\n\n\t\tthis.handleGizmos = {\n\n\t\t\tX: [\n\t\t\t\t[new THREE.Line(new CircleGeometry(1, 'x', 0.5), new GizmoLineMaterial({ color: 0xff0000 }))]\n\t\t\t],\n\n\t\t\tY: [\n\t\t\t\t[new THREE.Line(new CircleGeometry(1, 'y', 0.5), new GizmoLineMaterial({ color: 0x00ff00 }))]\n\t\t\t],\n\n\t\t\tZ: [\n\t\t\t\t[new THREE.Line(new CircleGeometry(1, 'z', 0.5), new GizmoLineMaterial({ color: 0x0000ff }))]\n\t\t\t],\n\n\t\t\tE: [\n\t\t\t\t[new THREE.Line(new CircleGeometry(1.25, 'z', 1), new GizmoLineMaterial({ color: 0xcccc00 }))]\n\t\t\t],\n\n\t\t\tXYZE: [\n\t\t\t\t[new THREE.Line(new CircleGeometry(1, 'z', 1), new GizmoLineMaterial({ color: 0x787878 }))]\n\t\t\t]\n\n\t\t};\n\n\t\tthis.pickerGizmos = {\n\n\t\t\tX: [\n\t\t\t\t[new THREE.Mesh(new THREE.TorusBufferGeometry(1, 0.12, 4, 12, Math.PI), pickerMaterial), [0, 0, 0], [0, - Math.PI / 2, - Math.PI / 2]]\n\t\t\t],\n\n\t\t\tY: [\n\t\t\t\t[new THREE.Mesh(new THREE.TorusBufferGeometry(1, 0.12, 4, 12, Math.PI), pickerMaterial), [0, 0, 0], [Math.PI / 2, 0, 0]]\n\t\t\t],\n\n\t\t\tZ: [\n\t\t\t\t[new THREE.Mesh(new THREE.TorusBufferGeometry(1, 0.12, 4, 12, Math.PI), pickerMaterial), [0, 0, 0], [0, 0, - Math.PI / 2]]\n\t\t\t],\n\n\t\t\tE: [\n\t\t\t\t[new THREE.Mesh(new THREE.TorusBufferGeometry(1.25, 0.12, 2, 24), pickerMaterial)]\n\t\t\t],\n\n\t\t\tXYZE: [\n\t\t\t\t[new THREE.Mesh()]// TODO\n\t\t\t]\n\n\t\t};\n\n\t\tthis.setActivePlane = function (axis) {\n\n\t\t\tif (axis === \"E\") this.activePlane = this.planes[\"XYZE\"];\n\n\t\t\tif (axis === \"X\") this.activePlane = this.planes[\"YZ\"];\n\n\t\t\tif (axis === \"Y\") this.activePlane = this.planes[\"XZ\"];\n\n\t\t\tif (axis === \"Z\") this.activePlane = this.planes[\"XY\"];\n\n\t\t};\n\n\t\tthis.update = function (rotation, eye2) {\n\n\t\t\tTHREE.TransformGizmo.prototype.update.apply(this, arguments);\n\n\t\t\tvar group = {\n\n\t\t\t\thandles: this[\"handles\"],\n\t\t\t\tpickers: this[\"pickers\"]\n\n\t\t\t};\n\n\t\t\tvar tempMatrix = new THREE.Matrix4();\n\t\t\tvar worldRotation = new THREE.Euler(0, 0, 1);\n\t\t\tvar tempQuaternion = new THREE.Quaternion();\n\t\t\tvar unitX = new THREE.Vector3(1, 0, 0);\n\t\t\tvar unitY = new THREE.Vector3(0, 1, 0);\n\t\t\tvar unitZ = new THREE.Vector3(0, 0, 1);\n\t\t\tvar quaternionX = new THREE.Quaternion();\n\t\t\tvar quaternionY = new THREE.Quaternion();\n\t\t\tvar quaternionZ = new THREE.Quaternion();\n\t\t\tvar eye = eye2.clone();\n\n\t\t\tworldRotation.copy(this.planes[\"XY\"].rotation);\n\t\t\ttempQuaternion.setFromEuler(worldRotation);\n\n\t\t\ttempMatrix.makeRotationFromQuaternion(tempQuaternion).getInverse(tempMatrix);\n\t\t\teye.applyMatrix4(tempMatrix);\n\n\t\t\tthis.traverse(function (child) {\n\n\t\t\t\ttempQuaternion.setFromEuler(worldRotation);\n\n\t\t\t\tif (child.name === \"X\") {\n\n\t\t\t\t\tquaternionX.setFromAxisAngle(unitX, Math.atan2(- eye.y, eye.z));\n\t\t\t\t\ttempQuaternion.multiplyQuaternions(tempQuaternion, quaternionX);\n\t\t\t\t\tchild.quaternion.copy(tempQuaternion);\n\n\t\t\t\t}\n\n\t\t\t\tif (child.name === \"Y\") {\n\n\t\t\t\t\tquaternionY.setFromAxisAngle(unitY, Math.atan2(eye.x, eye.z));\n\t\t\t\t\ttempQuaternion.multiplyQuaternions(tempQuaternion, quaternionY);\n\t\t\t\t\tchild.quaternion.copy(tempQuaternion);\n\n\t\t\t\t}\n\n\t\t\t\tif (child.name === \"Z\") {\n\n\t\t\t\t\tquaternionZ.setFromAxisAngle(unitZ, Math.atan2(eye.y, eye.x));\n\t\t\t\t\ttempQuaternion.multiplyQuaternions(tempQuaternion, quaternionZ);\n\t\t\t\t\tchild.quaternion.copy(tempQuaternion);\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t};\n\n\t\tthis.init();\n\n\t};\n\n\tTHREE.TransformGizmoRotate.prototype = Object.create(THREE.TransformGizmo.prototype);\n\tTHREE.TransformGizmoRotate.prototype.constructor = THREE.TransformGizmoRotate;\n\n\tTHREE.TransformGizmoScale = function () {\n\n\t\tTHREE.TransformGizmo.call(this);\n\n\t\tvar arrowGeometry = new THREE.Geometry();\n\t\tvar mesh = new THREE.Mesh(new THREE.BoxGeometry(0.125, 0.125, 0.125));\n\t\tmesh.position.y = 0.5;\n\t\tmesh.updateMatrix();\n\n\t\tarrowGeometry.merge(mesh.geometry, mesh.matrix);\n\n\t\tvar lineXGeometry = new THREE.BufferGeometry();\n\t\tlineXGeometry.addAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n\n\t\tvar lineYGeometry = new THREE.BufferGeometry();\n\t\tlineYGeometry.addAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n\n\t\tvar lineZGeometry = new THREE.BufferGeometry();\n\t\tlineZGeometry.addAttribute('position', new THREE.Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n\n\t\tthis.handleGizmos = {\n\n\t\t\tX: [\n\t\t\t\t[new THREE.Mesh(arrowGeometry, new GizmoMaterial({ color: 0xff0000 })), [0.5, 0, 0], [0, 0, - Math.PI / 2]],\n\t\t\t\t[new THREE.Line(lineXGeometry, new GizmoLineMaterial({ color: 0xff0000 }))]\n\t\t\t],\n\n\t\t\tY: [\n\t\t\t\t[new THREE.Mesh(arrowGeometry, new GizmoMaterial({ color: 0x00ff00 })), [0, 0.5, 0]],\n\t\t\t\t[new THREE.Line(lineYGeometry, new GizmoLineMaterial({ color: 0x00ff00 }))]\n\t\t\t],\n\n\t\t\tZ: [\n\t\t\t\t[new THREE.Mesh(arrowGeometry, new GizmoMaterial({ color: 0x0000ff })), [0, 0, 0.5], [Math.PI / 2, 0, 0]],\n\t\t\t\t[new THREE.Line(lineZGeometry, new GizmoLineMaterial({ color: 0x0000ff }))]\n\t\t\t],\n\n\t\t\tXYZ: [\n\t\t\t\t[new THREE.Mesh(new THREE.BoxBufferGeometry(0.125, 0.125, 0.125), new GizmoMaterial({ color: 0xffffff, opacity: 0.25 }))]\n\t\t\t]\n\n\t\t};\n\n\t\tthis.pickerGizmos = {\n\n\t\t\tX: [\n\t\t\t\t[new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), pickerMaterial), [0.6, 0, 0], [0, 0, - Math.PI / 2]]\n\t\t\t],\n\n\t\t\tY: [\n\t\t\t\t[new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), pickerMaterial), [0, 0.6, 0]]\n\t\t\t],\n\n\t\t\tZ: [\n\t\t\t\t[new THREE.Mesh(new THREE.CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), pickerMaterial), [0, 0, 0.6], [Math.PI / 2, 0, 0]]\n\t\t\t],\n\n\t\t\tXYZ: [\n\t\t\t\t[new THREE.Mesh(new THREE.BoxBufferGeometry(0.4, 0.4, 0.4), pickerMaterial)]\n\t\t\t]\n\n\t\t};\n\n\t\tthis.setActivePlane = function (axis, eye) {\n\n\t\t\tvar tempMatrix = new THREE.Matrix4();\n\t\t\teye.applyMatrix4(tempMatrix.getInverse(tempMatrix.extractRotation(this.planes[\"XY\"].matrixWorld)));\n\n\t\t\tif (axis === \"X\") {\n\n\t\t\t\tthis.activePlane = this.planes[\"XY\"];\n\t\t\t\tif (Math.abs(eye.y) > Math.abs(eye.z)) this.activePlane = this.planes[\"XZ\"];\n\n\t\t\t}\n\n\t\t\tif (axis === \"Y\") {\n\n\t\t\t\tthis.activePlane = this.planes[\"XY\"];\n\t\t\t\tif (Math.abs(eye.x) > Math.abs(eye.z)) this.activePlane = this.planes[\"YZ\"];\n\n\t\t\t}\n\n\t\t\tif (axis === \"Z\") {\n\n\t\t\t\tthis.activePlane = this.planes[\"XZ\"];\n\t\t\t\tif (Math.abs(eye.x) > Math.abs(eye.y)) this.activePlane = this.planes[\"YZ\"];\n\n\t\t\t}\n\n\t\t\tif (axis === \"XYZ\") this.activePlane = this.planes[\"XYZE\"];\n\n\t\t};\n\n\t\tthis.init();\n\n\t};\n\n\tTHREE.TransformGizmoScale.prototype = Object.create(THREE.TransformGizmo.prototype);\n\tTHREE.TransformGizmoScale.prototype.constructor = THREE.TransformGizmoScale;\n\n\tfunction TransformControls(camera, domElement) {\n\n\t\t// TODO: Make non-uniform scale and rotate play nice in hierarchies\n\t\t// TODO: ADD RXYZ contol\n\n\t\tTHREE.Object3D.call(this);\n\n\t\tdomElement = (domElement !== undefined) ? domElement : document;\n\n\t\tthis.object = undefined;\n\t\tthis.visible = false;\n\t\tthis.translationSnap = null;\n\t\tthis.rotationSnap = null;\n\t\tthis.space = \"world\";\n\t\tthis.size = 1;\n\t\tthis.axis = null;\n\n\t\tvar scope = this;\n\n\t\tvar _mode = \"translate\";\n\t\tvar _dragging = false;\n\t\tvar _plane = \"XY\";\n\t\tvar _gizmo = {\n\n\t\t\t\"translate\": new THREE.TransformGizmoTranslate(),\n\t\t\t\"rotate\": new THREE.TransformGizmoRotate(),\n\t\t\t\"scale\": new THREE.TransformGizmoScale()\n\t\t};\n\n\t\tfor (var type in _gizmo) {\n\n\t\t\tvar gizmoObj = _gizmo[type];\n\n\t\t\tgizmoObj.visible = (type === _mode);\n\t\t\tthis.add(gizmoObj);\n\n\t\t}\n\n\t\tvar changeEvent = { type: \"change\" };\n\t\tvar mouseDownEvent = { type: \"mouseDown\" };\n\t\tvar mouseUpEvent = { type: \"mouseUp\", mode: _mode };\n\t\tvar objectChangeEvent = { type: \"objectChange\" };\n\n\t\tvar ray = new THREE.Raycaster();\n\t\tvar pointerVector = new THREE.Vector2();\n\n\t\tvar point = new THREE.Vector3();\n\t\tvar offset = new THREE.Vector3();\n\n\t\tvar rotation = new THREE.Vector3();\n\t\tvar offsetRotation = new THREE.Vector3();\n\t\tvar scale = 1;\n\n\t\tvar lookAtMatrix = new THREE.Matrix4();\n\t\tvar eye = new THREE.Vector3();\n\n\t\tvar tempMatrix = new THREE.Matrix4();\n\t\tvar tempVector = new THREE.Vector3();\n\t\tvar tempQuaternion = new THREE.Quaternion();\n\t\tvar unitX = new THREE.Vector3(1, 0, 0);\n\t\tvar unitY = new THREE.Vector3(0, 1, 0);\n\t\tvar unitZ = new THREE.Vector3(0, 0, 1);\n\n\t\tvar quaternionXYZ = new THREE.Quaternion();\n\t\tvar quaternionX = new THREE.Quaternion();\n\t\tvar quaternionY = new THREE.Quaternion();\n\t\tvar quaternionZ = new THREE.Quaternion();\n\t\tvar quaternionE = new THREE.Quaternion();\n\n\t\tvar oldPosition = new THREE.Vector3();\n\t\tvar oldScale = new THREE.Vector3();\n\t\tvar oldRotationMatrix = new THREE.Matrix4();\n\n\t\tvar parentRotationMatrix = new THREE.Matrix4();\n\t\tvar parentScale = new THREE.Vector3();\n\n\t\tvar worldPosition = new THREE.Vector3();\n\t\tvar worldRotation = new THREE.Euler();\n\t\tvar worldRotationMatrix = new THREE.Matrix4();\n\t\tvar camPosition = new THREE.Vector3();\n\t\tvar camRotation = new THREE.Euler();\n\n\t\tdomElement.addEventListener(\"mousedown\", onPointerDown, false);\n\t\tdomElement.addEventListener(\"touchstart\", onPointerDown, false);\n\n\t\tdomElement.addEventListener(\"mousemove\", onPointerHover, false);\n\t\tdomElement.addEventListener(\"touchmove\", onPointerHover, false);\n\n\t\tdomElement.addEventListener(\"mousemove\", onPointerMove, false);\n\t\tdomElement.addEventListener(\"touchmove\", onPointerMove, false);\n\n\t\tdomElement.addEventListener(\"mouseup\", onPointerUp, false);\n\t\tdomElement.addEventListener(\"mouseout\", onPointerUp, false);\n\t\tdomElement.addEventListener(\"touchend\", onPointerUp, false);\n\t\tdomElement.addEventListener(\"touchcancel\", onPointerUp, false);\n\t\tdomElement.addEventListener(\"touchleave\", onPointerUp, false);\n\n\t\tthis.dispose = function () {\n\n\t\t\tdomElement.removeEventListener(\"mousedown\", onPointerDown);\n\t\t\tdomElement.removeEventListener(\"touchstart\", onPointerDown);\n\n\t\t\tdomElement.removeEventListener(\"mousemove\", onPointerHover);\n\t\t\tdomElement.removeEventListener(\"touchmove\", onPointerHover);\n\n\t\t\tdomElement.removeEventListener(\"mousemove\", onPointerMove);\n\t\t\tdomElement.removeEventListener(\"touchmove\", onPointerMove);\n\n\t\t\tdomElement.removeEventListener(\"mouseup\", onPointerUp);\n\t\t\tdomElement.removeEventListener(\"mouseout\", onPointerUp);\n\t\t\tdomElement.removeEventListener(\"touchend\", onPointerUp);\n\t\t\tdomElement.removeEventListener(\"touchcancel\", onPointerUp);\n\t\t\tdomElement.removeEventListener(\"touchleave\", onPointerUp);\n\n\t\t};\n\n\t\tthis.attach = function (object) {\n\n\t\t\tthis.object = object;\n\t\t\tthis.visible = true;\n\t\t\tthis.update();\n\n\t\t};\n\n\t\tthis.detach = function () {\n\n\t\t\tthis.object = undefined;\n\t\t\tthis.visible = false;\n\t\t\tthis.axis = null;\n\n\t\t};\n\n\t\tthis.getMode = function () {\n\n\t\t\treturn _mode;\n\n\t\t};\n\n\t\tthis.setMode = function (mode) {\n\n\t\t\t_mode = mode ? mode : _mode;\n\n\t\t\tif (_mode === \"scale\") scope.space = \"local\";\n\n\t\t\tfor (var type in _gizmo) _gizmo[type].visible = (type === _mode);\n\n\t\t\tthis.update();\n\t\t\tscope.dispatchEvent(changeEvent);\n\n\t\t};\n\n\t\tthis.setTranslationSnap = function (translationSnap) {\n\n\t\t\tscope.translationSnap = translationSnap;\n\n\t\t};\n\n\t\tthis.setRotationSnap = function (rotationSnap) {\n\n\t\t\tscope.rotationSnap = rotationSnap;\n\n\t\t};\n\n\t\tthis.setSize = function (size) {\n\n\t\t\tscope.size = size;\n\t\t\tthis.update();\n\t\t\tscope.dispatchEvent(changeEvent);\n\n\t\t};\n\n\t\tthis.setSpace = function (space) {\n\n\t\t\tscope.space = space;\n\t\t\tthis.update();\n\t\t\tscope.dispatchEvent(changeEvent);\n\n\t\t};\n\n\t\tthis.update = function () {\n\n\t\t\tif (scope.object === undefined) return;\n\n\t\t\tscope.object.updateMatrixWorld();\n\t\t\tworldPosition.setFromMatrixPosition(scope.object.matrixWorld);\n\t\t\tworldRotation.setFromRotationMatrix(tempMatrix.extractRotation(scope.object.matrixWorld));\n\n\t\t\tcamera.updateMatrixWorld();\n\t\t\tcamPosition.setFromMatrixPosition(camera.matrixWorld);\n\t\t\tcamRotation.setFromRotationMatrix(tempMatrix.extractRotation(camera.matrixWorld));\n\n\t\t\tscale = worldPosition.distanceTo(camPosition) / 6 * scope.size;\n\t\t\tthis.position.copy(worldPosition);\n\t\t\tthis.scale.set(scale, scale, scale);\n\n\t\t\tif (camera instanceof THREE.PerspectiveCamera) {\n\n\t\t\t\teye.copy(camPosition).sub(worldPosition).normalize();\n\n\t\t\t} else if (camera instanceof THREE.OrthographicCamera) {\n\n\t\t\t\teye.copy(camPosition).normalize();\n\n\t\t\t}\n\n\t\t\tif (scope.space === \"local\") {\n\n\t\t\t\t_gizmo[_mode].update(worldRotation, eye);\n\n\t\t\t} else if (scope.space === \"world\") {\n\n\t\t\t\t_gizmo[_mode].update(new THREE.Euler(), eye);\n\n\t\t\t}\n\n\t\t\t_gizmo[_mode].highlight(scope.axis);\n\n\t\t};\n\n\t\tfunction onPointerHover(event) {\n\n\t\t\tif (scope.object === undefined || _dragging === true || (event.button !== undefined && event.button !== 0)) return;\n\n\t\t\tvar pointer = event.changedTouches ? event.changedTouches[0] : event;\n\n\t\t\tvar intersect = intersectObjects(pointer, _gizmo[_mode].pickers.children);\n\n\t\t\tvar axis = null;\n\n\t\t\tif (intersect) {\n\n\t\t\t\taxis = intersect.object.name;\n\n\t\t\t\tevent.preventDefault();\n\n\t\t\t}\n\n\t\t\tif (scope.axis !== axis) {\n\n\t\t\t\tscope.axis = axis;\n\t\t\t\tscope.update();\n\t\t\t\tscope.dispatchEvent(changeEvent);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerDown(event) {\n\n\t\t\tif (scope.object === undefined || _dragging === true || (event.button !== undefined && event.button !== 0)) return;\n\n\t\t\tvar pointer = event.changedTouches ? event.changedTouches[0] : event;\n\n\t\t\tif (pointer.button === 0 || pointer.button === undefined) {\n\n\t\t\t\tvar intersect = intersectObjects(pointer, _gizmo[_mode].pickers.children);\n\n\t\t\t\tif (intersect) {\n\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tevent.stopPropagation();\n\n\t\t\t\t\tscope.dispatchEvent(mouseDownEvent);\n\n\t\t\t\t\tscope.axis = intersect.object.name;\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\teye.copy(camPosition).sub(worldPosition).normalize();\n\n\t\t\t\t\t_gizmo[_mode].setActivePlane(scope.axis, eye);\n\n\t\t\t\t\tvar planeIntersect = intersectObjects(pointer, [_gizmo[_mode].activePlane]);\n\n\t\t\t\t\tif (planeIntersect) {\n\n\t\t\t\t\t\toldPosition.copy(scope.object.position);\n\t\t\t\t\t\toldScale.copy(scope.object.scale);\n\n\t\t\t\t\t\toldRotationMatrix.extractRotation(scope.object.matrix);\n\t\t\t\t\t\tworldRotationMatrix.extractRotation(scope.object.matrixWorld);\n\n\t\t\t\t\t\tparentRotationMatrix.extractRotation(scope.object.parent.matrixWorld);\n\t\t\t\t\t\tparentScale.setFromMatrixScale(tempMatrix.getInverse(scope.object.parent.matrixWorld));\n\n\t\t\t\t\t\toffset.copy(planeIntersect.point);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_dragging = true;\n\n\t\t}\n\n\t\tfunction onPointerMove(event) {\n\n\t\t\tif (scope.object === undefined || scope.axis === null || _dragging === false || (event.button !== undefined && event.button !== 0)) return;\n\n\t\t\tvar pointer = event.changedTouches ? event.changedTouches[0] : event;\n\n\t\t\tvar planeIntersect = intersectObjects(pointer, [_gizmo[_mode].activePlane]);\n\n\t\t\tif (planeIntersect === false) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tpoint.copy(planeIntersect.point);\n\n\t\t\tif (_mode === \"translate\") {\n\n\t\t\t\tpoint.sub(offset);\n\t\t\t\tpoint.multiply(parentScale);\n\n\t\t\t\tif (scope.space === \"local\") {\n\n\t\t\t\t\tpoint.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix));\n\n\t\t\t\t\tif (scope.axis.search(\"X\") === - 1) point.x = 0;\n\t\t\t\t\tif (scope.axis.search(\"Y\") === - 1) point.y = 0;\n\t\t\t\t\tif (scope.axis.search(\"Z\") === - 1) point.z = 0;\n\n\t\t\t\t\tpoint.applyMatrix4(oldRotationMatrix);\n\n\t\t\t\t\tscope.object.position.copy(oldPosition);\n\t\t\t\t\tscope.object.position.add(point);\n\n\t\t\t\t}\n\n\t\t\t\tif (scope.space === \"world\" || scope.axis.search(\"XYZ\") !== - 1) {\n\n\t\t\t\t\tif (scope.axis.search(\"X\") === - 1) point.x = 0;\n\t\t\t\t\tif (scope.axis.search(\"Y\") === - 1) point.y = 0;\n\t\t\t\t\tif (scope.axis.search(\"Z\") === - 1) point.z = 0;\n\n\t\t\t\t\tpoint.applyMatrix4(tempMatrix.getInverse(parentRotationMatrix));\n\n\t\t\t\t\tscope.object.position.copy(oldPosition);\n\t\t\t\t\tscope.object.position.add(point);\n\n\t\t\t\t}\n\n\t\t\t\tif (scope.translationSnap !== null) {\n\n\t\t\t\t\tif (scope.space === \"local\") {\n\n\t\t\t\t\t\tscope.object.position.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix));\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (scope.axis.search(\"X\") !== - 1) scope.object.position.x = Math.round(scope.object.position.x / scope.translationSnap) * scope.translationSnap;\n\t\t\t\t\tif (scope.axis.search(\"Y\") !== - 1) scope.object.position.y = Math.round(scope.object.position.y / scope.translationSnap) * scope.translationSnap;\n\t\t\t\t\tif (scope.axis.search(\"Z\") !== - 1) scope.object.position.z = Math.round(scope.object.position.z / scope.translationSnap) * scope.translationSnap;\n\n\t\t\t\t\tif (scope.space === \"local\") {\n\n\t\t\t\t\t\tscope.object.position.applyMatrix4(worldRotationMatrix);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if (_mode === \"scale\") {\n\n\t\t\t\tpoint.sub(offset);\n\t\t\t\tpoint.multiply(parentScale);\n\n\t\t\t\tif (scope.space === \"local\") {\n\n\t\t\t\t\tif (scope.axis === \"XYZ\") {\n\n\t\t\t\t\t\tscale = 1 + ((point.y) / Math.max(oldScale.x, oldScale.y, oldScale.z));\n\n\t\t\t\t\t\tscope.object.scale.x = oldScale.x * scale;\n\t\t\t\t\t\tscope.object.scale.y = oldScale.y * scale;\n\t\t\t\t\t\tscope.object.scale.z = oldScale.z * scale;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpoint.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix));\n\n\t\t\t\t\t\tif (scope.axis === \"X\") scope.object.scale.x = oldScale.x * (1 + point.x / oldScale.x);\n\t\t\t\t\t\tif (scope.axis === \"Y\") scope.object.scale.y = oldScale.y * (1 + point.y / oldScale.y);\n\t\t\t\t\t\tif (scope.axis === \"Z\") scope.object.scale.z = oldScale.z * (1 + point.z / oldScale.z);\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if (_mode === \"rotate\") {\n\n\t\t\t\tpoint.sub(worldPosition);\n\t\t\t\tpoint.multiply(parentScale);\n\t\t\t\ttempVector.copy(offset).sub(worldPosition);\n\t\t\t\ttempVector.multiply(parentScale);\n\n\t\t\t\tif (scope.axis === \"E\") {\n\n\t\t\t\t\tpoint.applyMatrix4(tempMatrix.getInverse(lookAtMatrix));\n\t\t\t\t\ttempVector.applyMatrix4(tempMatrix.getInverse(lookAtMatrix));\n\n\t\t\t\t\trotation.set(Math.atan2(point.z, point.y), Math.atan2(point.x, point.z), Math.atan2(point.y, point.x));\n\t\t\t\t\toffsetRotation.set(Math.atan2(tempVector.z, tempVector.y), Math.atan2(tempVector.x, tempVector.z), Math.atan2(tempVector.y, tempVector.x));\n\n\t\t\t\t\ttempQuaternion.setFromRotationMatrix(tempMatrix.getInverse(parentRotationMatrix));\n\n\t\t\t\t\tquaternionE.setFromAxisAngle(eye, rotation.z - offsetRotation.z);\n\t\t\t\t\tquaternionXYZ.setFromRotationMatrix(worldRotationMatrix);\n\n\t\t\t\t\ttempQuaternion.multiplyQuaternions(tempQuaternion, quaternionE);\n\t\t\t\t\ttempQuaternion.multiplyQuaternions(tempQuaternion, quaternionXYZ);\n\n\t\t\t\t\tscope.object.quaternion.copy(tempQuaternion);\n\n\t\t\t\t} else if (scope.axis === \"XYZE\") {\n\n\t\t\t\t\tquaternionE.setFromEuler(point.clone().cross(tempVector).normalize()); // rotation axis\n\n\t\t\t\t\ttempQuaternion.setFromRotationMatrix(tempMatrix.getInverse(parentRotationMatrix));\n\t\t\t\t\tquaternionX.setFromAxisAngle(quaternionE, - point.clone().angleTo(tempVector));\n\t\t\t\t\tquaternionXYZ.setFromRotationMatrix(worldRotationMatrix);\n\n\t\t\t\t\ttempQuaternion.multiplyQuaternions(tempQuaternion, quaternionX);\n\t\t\t\t\ttempQuaternion.multiplyQuaternions(tempQuaternion, quaternionXYZ);\n\n\t\t\t\t\tscope.object.quaternion.copy(tempQuaternion);\n\n\t\t\t\t} else if (scope.space === \"local\") {\n\n\t\t\t\t\tpoint.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix));\n\n\t\t\t\t\ttempVector.applyMatrix4(tempMatrix.getInverse(worldRotationMatrix));\n\n\t\t\t\t\trotation.set(Math.atan2(point.z, point.y), Math.atan2(point.x, point.z), Math.atan2(point.y, point.x));\n\t\t\t\t\toffsetRotation.set(Math.atan2(tempVector.z, tempVector.y), Math.atan2(tempVector.x, tempVector.z), Math.atan2(tempVector.y, tempVector.x));\n\n\t\t\t\t\tquaternionXYZ.setFromRotationMatrix(oldRotationMatrix);\n\n\t\t\t\t\tif (scope.rotationSnap !== null) {\n\n\t\t\t\t\t\tquaternionX.setFromAxisAngle(unitX, Math.round((rotation.x - offsetRotation.x) / scope.rotationSnap) * scope.rotationSnap);\n\t\t\t\t\t\tquaternionY.setFromAxisAngle(unitY, Math.round((rotation.y - offsetRotation.y) / scope.rotationSnap) * scope.rotationSnap);\n\t\t\t\t\t\tquaternionZ.setFromAxisAngle(unitZ, Math.round((rotation.z - offsetRotation.z) / scope.rotationSnap) * scope.rotationSnap);\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tquaternionX.setFromAxisAngle(unitX, rotation.x - offsetRotation.x);\n\t\t\t\t\t\tquaternionY.setFromAxisAngle(unitY, rotation.y - offsetRotation.y);\n\t\t\t\t\t\tquaternionZ.setFromAxisAngle(unitZ, rotation.z - offsetRotation.z);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (scope.axis === \"X\") quaternionXYZ.multiplyQuaternions(quaternionXYZ, quaternionX);\n\t\t\t\t\tif (scope.axis === \"Y\") quaternionXYZ.multiplyQuaternions(quaternionXYZ, quaternionY);\n\t\t\t\t\tif (scope.axis === \"Z\") quaternionXYZ.multiplyQuaternions(quaternionXYZ, quaternionZ);\n\n\t\t\t\t\tscope.object.quaternion.copy(quaternionXYZ);\n\n\t\t\t\t} else if (scope.space === \"world\") {\n\n\t\t\t\t\trotation.set(Math.atan2(point.z, point.y), Math.atan2(point.x, point.z), Math.atan2(point.y, point.x));\n\t\t\t\t\toffsetRotation.set(Math.atan2(tempVector.z, tempVector.y), Math.atan2(tempVector.x, tempVector.z), Math.atan2(tempVector.y, tempVector.x));\n\n\t\t\t\t\ttempQuaternion.setFromRotationMatrix(tempMatrix.getInverse(parentRotationMatrix));\n\n\t\t\t\t\tif (scope.rotationSnap !== null) {\n\n\t\t\t\t\t\tquaternionX.setFromAxisAngle(unitX, Math.round((rotation.x - offsetRotation.x) / scope.rotationSnap) * scope.rotationSnap);\n\t\t\t\t\t\tquaternionY.setFromAxisAngle(unitY, Math.round((rotation.y - offsetRotation.y) / scope.rotationSnap) * scope.rotationSnap);\n\t\t\t\t\t\tquaternionZ.setFromAxisAngle(unitZ, Math.round((rotation.z - offsetRotation.z) / scope.rotationSnap) * scope.rotationSnap);\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tquaternionX.setFromAxisAngle(unitX, rotation.x - offsetRotation.x);\n\t\t\t\t\t\tquaternionY.setFromAxisAngle(unitY, rotation.y - offsetRotation.y);\n\t\t\t\t\t\tquaternionZ.setFromAxisAngle(unitZ, rotation.z - offsetRotation.z);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tquaternionXYZ.setFromRotationMatrix(worldRotationMatrix);\n\n\t\t\t\t\tif (scope.axis === \"X\") tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionX);\n\t\t\t\t\tif (scope.axis === \"Y\") tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionY);\n\t\t\t\t\tif (scope.axis === \"Z\") tempQuaternion.multiplyQuaternions(tempQuaternion, quaternionZ);\n\n\t\t\t\t\ttempQuaternion.multiplyQuaternions(tempQuaternion, quaternionXYZ);\n\n\t\t\t\t\tscope.object.quaternion.copy(tempQuaternion);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.update();\n\t\t\tscope.dispatchEvent(changeEvent);\n\t\t\tscope.dispatchEvent(objectChangeEvent);\n\n\t\t}\n\n\t\tfunction onPointerUp(event) {\n\n\t\t\tevent.preventDefault(); // Prevent MouseEvent on mobile\n\n\t\t\tif (event.button !== undefined && event.button !== 0) return;\n\n\t\t\tif (_dragging && (scope.axis !== null)) {\n\n\t\t\t\tmouseUpEvent.mode = _mode;\n\t\t\t\tscope.dispatchEvent(mouseUpEvent);\n\n\t\t\t}\n\n\t\t\t_dragging = false;\n\n\t\t\tif ('TouchEvent' in window && event instanceof TouchEvent) {\n\n\t\t\t\t// Force \"rollover\"\n\n\t\t\t\tscope.axis = null;\n\t\t\t\tscope.update();\n\t\t\t\tscope.dispatchEvent(changeEvent);\n\n\t\t\t} else {\n\n\t\t\t\tonPointerHover(event);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction intersectObjects(pointer, objects) {\n\n\t\t\tvar rect = domElement.getBoundingClientRect();\n\t\t\tvar x = (pointer.clientX - rect.left) / rect.width;\n\t\t\tvar y = (pointer.clientY - rect.top) / rect.height;\n\n\t\t\tpointerVector.set((x * 2) - 1, - (y * 2) + 1);\n\t\t\tray.setFromCamera(pointerVector, camera);\n\n\t\t\tvar intersections = ray.intersectObjects(objects, true);\n\t\t\treturn intersections[0] ? intersections[0] : false;\n\n\t\t}\n\n\t};\n\n\tTransformControls.prototype = Object.create(THREE.Object3D.prototype);\n\tTransformControls.prototype.constructor = TransformControls;\n\n\n\treturn TransformControls;\n}\n"],
  "mappings": "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",
  "names": ["type"]
}
